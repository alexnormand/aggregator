<?xml version="1.0" encoding="utf-8"?>
<project name="Teevee" default="prod" basedir=".">

    <description>Client-side ANT build file for Teevee</description>

    <target name="-load.properties"
        description="Set properties for this build">
        <!--YUI Compressor location-->
        <property name="yui.dir" value="${user.home}/tools/yuicompressor-2.4.7.jar"/>
	<!-- HTML compressor location-->
	<property name="htmlcompressor.dir" value="${user.home}/tools/htmlcompressor-1.5.2.jar"/>
        <!--Source JS dir-->
        <property name="src.js.dir" value="${basedir}/js"/>
        <!--Source CSS dir-->
        <property name="src.css.dir" value="${basedir}/css"/>
	<!-- Server side source code-->
        <property name="src.serverside.dir" value="${basedir}/get"/>
        <!--r.js optimization dir-->
        <property name="r.node" value="${user.home}/tools/r.js"/>
	<property name="app.build.js" value="${basedir}/js/app-build.js" />
        <!--Output dir-->
        <property name="build.dir" value="build"/>
        <!--Build version information -->
        <property name="build.major" value="1"/>
        <property name="build.minor" value="1"/>
    </target>



    <!--Create build directories-->
    <target name="-init" depends="-load.properties"
        description="Create build directory structure">
        <!--Create the time stamp for the new build-->
        <tstamp>
            <format property="TODAY" pattern="EEE, d MMM yyyy HH:mm:ss Z"/>
        </tstamp>
        
        <!--Delete previous build files-->
        <delete dir="${build.dir}"/>
        
        <!--Recreate the build directories-->
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${build.dir}/js"/>
        <mkdir dir="${build.dir}/css"/>
        <mkdir dir="${build.dir}/img"/>
	<mkdir dir="${build.dir}/get" />
        
        <!--Log the build timestamps to file
        <echo file="${build.dir}/js/tstamp.txt" append="false">Build Date: ${TODAY}</echo>
        <echo file="${build.dir}/css/tstamp.txt" append="false">Build Date: ${TODAY}</echo>
	-->
    </target>

    <!-- Copy index.html, apple-touch-icon, and all static files present 
	 in the root directory -->
    <target name="-copy.root.static.files"
	    description="Copies index.html to build">
      <exec executable="java" failonerror="true">
	<arg line=" -jar ${htmlcompressor.dir} -o ${build.dir}/index.html --compress-js --compress-css ${basedir}/index.html" />
      </exec>
      <echo>Compressed index.html</echo>
      <copy file="${basedir}/apple-touch-icon.png" todir="${build.dir}" />
      <copy file="${basedir}/favicon.ico" todir="${build.dir}" />
      <copy todir="${build.dir}/img">
	<fileset dir="${basedir}/img" />
      </copy>
      <echo>Copied index.html</echo>
    </target>
	
    <!-- Server side code -->
    <target name="-copy.serverside"
	    description="Copies serverside code to build dir">
      <copy todir="${build.dir}/get">
	  <fileset dir="${src.serverside.dir}" excludes="." />
      </copy>    
      <copy file="${src.serverside.dir}/.htaccess"  todir="${build.dir}/get"/>	
      <echo>Copied server side code</echo>
    </target>

	
    <!--Concatenate JS files-->
    <target name="-js.concatenate"
        description="Concatenates specified JavaScript files">      
        <exec executable="node" failonerror="true">
	  <arg line=" ${r.node} -o ${app.build.js}
                                findNestedDependencies=true 
                                name=main" />
	</exec>
	<copy file="${src.js.dir}/lib/requirejs/require-jquery.js" todir="${build.dir}/js/lib/requirejs"/>
	<echo>Finished JS concatenation and minification</echo>
    </target>

	    
    <!--Minify CSS files-->
    <target name="-css.minify"
        description="Minifies CSS files">
      <exec executable="java" failonerror="true">
	<arg line=" -jar ${yui.dir} -o ${build.dir}/css/style.css ${src.css.dir}/style.css "/>
      </exec>            
      <echo>Finished CSS minification</echo>
    </target>


    <!--Build-->
    <target name="prod" 
        description="Builds project files for production use"
        depends="
            -load.properties, 
            -init, 
	    -copy.root.static.files,
	    -copy.serverside,
            -js.concatenate,
            -css.minify">
    </target>
</project>

